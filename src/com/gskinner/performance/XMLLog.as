/*** XMLLog by Grant Skinner. Feb 2, 2010* Visit www.gskinner.com/blog for documentation, updates and more free code.*** Copyright (c) 2010 Grant Skinner* * Permission is hereby granted, free of charge, to any person* obtaining a copy of this software and associated documentation* files (the "Software"), to deal in the Software without* restriction, including without limitation the rights to use,* copy, modify, merge, publish, distribute, sublicense, and/or sell* copies of the Software, and to permit persons to whom the* Software is furnished to do so, subject to the following* conditions:* * The above copyright notice and this permission notice shall be* included in all copies or substantial portions of the Software.* * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR* OTHER DEALINGS IN THE SOFTWARE.**/package com.gskinner.performance {		import flash.events.Event;	import flash.system.Capabilities;		/**	* Simple example of logging all of the XML results from a PerformanceTest instance.	**/	public class XMLLog {			// public properties:		/**		* The full generated XML from all of the tests run while this log has been active.		**/		public var xml:XML;				/**		* Unlike TextLog, this function is only called when the CLOSE event is dispatched from the PerformanceTest.		* It is called with a single parameter containing the XML. It is set to trace by default.		**/		public var out:Function = trace;			// protected properties:		protected var performanceTest:PerformanceTest;		protected var currentTestSuite:TestSuite;			// constructor:		/**		* Creates a new XMLLog instance. You can specify the PerformanceTest instance to log, or null to use		* the global instance. You can also specify a name to use in the XML root node.		**/		public function XMLLog(performanceTest:PerformanceTest=null,name:String=null) {			xml = <TestCollection playerVersion={Capabilities.version} isDebugger={Capabilities.isDebugger} playerType={Capabilities.playerType} os={Capabilities.os} manufacturer={Capabilities.manufacturer}/>;			if ("cpuArchitecture" in Capabilities) { xml.@cpuArchitecture = Capabilities["cpuArchitecture"]; } // 10.1 and higher						if (name) { xml.@name = name; }			this.performanceTest = performanceTest ? performanceTest : PerformanceTest.getInstance();			this.performanceTest.addEventListener(Event.COMPLETE,handleComplete);			this.performanceTest.addEventListener(Event.CLOSE,handleComplete);		}			// protected methods:		// event handlers:		/** @private **/		protected function handleComplete(evt:Event):void {			var pf:PerformanceTest = performanceTest;			if (pf.currentTestSuite != currentTestSuite) {				if (currentTestSuite) {					xml.* += currentTestSuite.toXML();				}				currentTestSuite = pf.currentTestSuite;			}			if (currentTestSuite == null && pf.currentTest != null) {				xml.* += pf.currentTest.toXML();			}			if (evt.type == Event.CLOSE) { out(xml); }		}	}	}