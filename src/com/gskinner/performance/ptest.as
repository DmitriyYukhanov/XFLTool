/*** ptest by Grant Skinner. Feb 1, 2010* Visit www.gskinner.com/blog for documentation, updates and more free code.*** Copyright (c) 2010 Grant Skinner* * Permission is hereby granted, free of charge, to any person* obtaining a copy of this software and associated documentation* files (the "Software"), to deal in the Software without* restriction, including without limitation the rights to use,* copy, modify, merge, publish, distribute, sublicense, and/or sell* copies of the Software, and to permit persons to whom the* Software is furnished to do so, subject to the following* conditions:* * The above copyright notice and this permission notice shall be* included in all copies or substantial portions of the Software.* * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR* OTHER DEALINGS IN THE SOFTWARE.**/package com.gskinner.performance {		import com.gskinner.performance.PerformanceTest;	import com.gskinner.performance.AbstractTest;		/**	* Shortcut method for quickly timing a function. You can specify the function to test, parameters to use,	* a label to associate with the test (to identify it in trace output), the number of iterations to run	* (separately timed runs of the test), and loops (number of times to execute the function in each iteration).	* You must import <code>com.gskinner.performance.ptest</code> to use it.	* <br/><br/>	* For example:<br/>	* <code>trace(ptest(myFunction));</code>	**/	public function ptest(method:Function, params:Array=null, name:String=null, iterations:uint=1, loops:uint=1):AbstractTest {		return PerformanceTest.getInstance().runSimpleTest(method, params, name, iterations, loops);	}	}